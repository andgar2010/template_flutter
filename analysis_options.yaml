# # This file configures the analyzer, which statically analyzes Dart code to
# # check for errors, warnings, and lints.
# #
# # The issues identified by the analyzer are surfaced in the UI of Dart-enabled
# # IDEs (https://dart.dev/tools#ides-and-editors). The analyzer can also be
# # invoked from the command line by running `flutter analyze`.

# # The following line activates a set of recommended lints for Flutter apps,
# # packages, and plugins designed to encourage good coding practices.
# include: package:flutter_lints/flutter.yaml

# linter:
#   # The lint rules applied to this project can be customized in the
#   # section below to disable rules from the `package:flutter_lints/flutter.yaml`
#   # included above or to enable additional rules. A list of all available lints
#   # and their documentation is published at
#   # https://dart-lang.github.io/linter/lints/index.html.
#   #
#   # Instead of disabling a lint rule for the entire project in the
#   # section below, it can also be suppressed for a single line of code
#   # or a specific dart file by using the `// ignore: name_of_lint` and
#   # `// ignore_for_file: name_of_lint` syntax on the line or in the file
#   # producing the lint.
#   rules:
#     # avoid_print: false  # Uncomment to disable the `avoid_print` rule
#     # prefer_single_quotes: true  # Uncomment to enable the `prefer_single_quotes` rule

# # Additional information about this file can be found at
# # https://dart.dev/guides/language/analysis-options

#     # Import rules of very_good_analysis/analysis_options.2.3.0
#     - always_declare_return_types
#     - always_use_package_imports
#     - avoid_bool_literals_in_conditional_expressions
#     - avoid_catching_errors
#     - avoid_double_and_int_checks
#     - avoid_dynamic_calls
#     - avoid_equals_and_hash_code_on_mutable_classes
#     - avoid_escaping_inner_quotes
#     - avoid_field_initializers_in_const_classes
#     - avoid_redundant_argument_values
#     - avoid_returning_null
#     - avoid_returning_null_for_future
#     - avoid_returning_this
#     - avoid_setters_without_getters
#     - avoid_slow_async_io
#     - avoid_type_to_string
#     - avoid_unused_constructor_parameters
#     - avoid_void_async
#     - cancel_subscriptions
#     - cascade_invocations
#     - cast_nullable_to_non_nullable
#     - comment_references
#     - deprecated_consistency
#     - directives_ordering
#     - invariant_booleans
#     - join_return_with_assignment
#     - leading_newlines_in_multiline_strings
#     - lines_longer_than_80_chars
#     - literal_only_boolean_expressions
#     - missing_whitespace_between_adjacent_strings
#     - no_adjacent_strings_in_list
#     - no_runtimeType_toString
#     - null_check_on_nullable_type_parameter
#     - omit_local_variable_types
#     - only_throw_errors
#     - package_api_docs
#     - prefer_asserts_in_initializer_lists
#     - prefer_final_in_for_each
#     - prefer_final_locals
#     - prefer_if_elements_to_conditional_expressions
#     - prefer_int_literals
#     - prefer_interpolation_to_compose_strings
#     - prefer_single_quotes
#     - public_member_api_docs
#     - sort_child_properties_last
#     - sort_constructors_first
#     - sort_pub_dependencies
#     - sort_unnamed_constructors_first
#     - test_types_in_equals
#     - throw_in_finally
#     - tighten_type_of_initializing_formals
#     - type_annotate_public_apis
#     - unawaited_futures
#     - unnecessary_await_in_return
#     - unnecessary_lambdas
#     - unnecessary_null_aware_assignments
#     - unnecessary_null_checks
#     - unnecessary_nullable_for_final_variable_declarations
#     - unnecessary_parenthesis
#     - unnecessary_raw_strings
#     - unnecessary_statements
#     - use_build_context_synchronously
#     - use_key_in_widget_constructors
#     - use_late_for_private_fields_and_variables
#     - use_named_constants
#     - use_raw_strings
#     - use_rethrow_when_possible
#     - use_setters_to_change_properties
#     - use_string_buffers
#     - use_to_and_as_if_applicable


linter:
  rules:
##CORE
    - avoid_empty_else
    - avoid_relative_lib_imports
    - avoid_shadowing_type_parameters
    - avoid_types_as_parameter_names
    - await_only_futures
    - camel_case_extensions
    - camel_case_types
    - curly_braces_in_flow_control_structures
    - empty_catches
    - file_names
    - hash_and_equals
    - iterable_contains_unrelated_type
    - list_remove_unrelated_type
    - no_duplicate_case_values
    - non_constant_identifier_names
    - package_prefixed_library_names
    - prefer_generic_function_type_aliases
    - prefer_is_empty
    - prefer_is_not_empty
    - prefer_iterable_whereType
    - prefer_typing_uninitialized_variables
    - provide_deprecation_message
    - unnecessary_overrides
    - unrelated_type_equality_checks
    - valid_regexps
    - void_checks
##recommended
    - always_require_non_null_named_parameters
    - annotate_overrides
    - avoid_function_literals_in_foreach_calls
    - avoid_init_to_null
    - avoid_null_checks_in_equality_operators
    - avoid_renaming_method_parameters
    - avoid_return_types_on_setters
    - avoid_returning_null_for_void
    - avoid_single_cascade_in_expression_statements
    - constant_identifier_names
    - control_flow_in_finally
    - empty_constructor_bodies
    - empty_statements
    - exhaustive_cases
    - implementation_imports
    - library_names
    - library_prefixes
    - null_closures
    - overridden_fields
    - package_names
    - prefer_adjacent_string_concatenation
    - prefer_collection_literals
    - prefer_conditional_assignment
    - prefer_contains
    - prefer_equal_for_default_values
    - prefer_final_fields
    - prefer_for_elements_to_map_fromIterable
    - prefer_function_declarations_over_variables
    - prefer_if_null_operators
    - prefer_initializing_formals
    - prefer_inlined_adds
    - prefer_is_not_operator
    - prefer_null_aware_operators
    - prefer_spread_collections
    - prefer_void_to_null
    - recursive_getters
    - slash_for_doc_comments
    - type_init_formals
    - unnecessary_brace_in_string_interps
    - unnecessary_const
    - unnecessary_getters_setters
    - unnecessary_new
    - unnecessary_null_in_if_null_operators
    - unnecessary_string_escapes
    - unnecessary_string_interpolations
    - unnecessary_this
    - use_function_type_syntax_for_parameters
    - use_rethrow_when_possible
## flutter_lints
    - avoid_print
    - avoid_unnecessary_containers
    - avoid_web_libraries_in_flutter
    - no_logic_in_create_state
    - prefer_const_constructors
    - prefer_const_constructors_in_immutables
    - prefer_const_declarations
    - prefer_const_literals_to_create_immutables
    - sized_box_for_whitespace
    - use_full_hex_values_for_flutter_colors
    - use_key_in_widget_constructors
##very_good_analysis/analysis_options.2.3.0
    - always_declare_return_types
    # - always_use_package_imports
    - avoid_bool_literals_in_conditional_expressions
    - avoid_catching_errors
    - avoid_double_and_int_checks
    - avoid_dynamic_calls
    - avoid_equals_and_hash_code_on_mutable_classes
    - avoid_escaping_inner_quotes
    - avoid_field_initializers_in_const_classes
    - avoid_redundant_argument_values
    - avoid_returning_null
    - avoid_returning_null_for_future
    - avoid_returning_this
    - avoid_slow_async_io
    - avoid_type_to_string
    - avoid_unused_constructor_parameters
    - avoid_void_async
    - cancel_subscriptions
    - cascade_invocations
    - cast_nullable_to_non_nullable
    - comment_references
    - deprecated_consistency
    - directives_ordering
    - invariant_booleans
    - join_return_with_assignment
    - leading_newlines_in_multiline_strings
    # - lines_longer_than_80_chars
    - literal_only_boolean_expressions
    - missing_whitespace_between_adjacent_strings
    - no_adjacent_strings_in_list
    - no_runtimeType_toString
    - null_check_on_nullable_type_parameter
    # - omit_local_variable_types
    - only_throw_errors
    # - package_api_docs
    - prefer_asserts_in_initializer_lists
    - prefer_final_in_for_each
    - prefer_final_locals
    - prefer_if_elements_to_conditional_expressions
    - prefer_int_literals
    - prefer_interpolation_to_compose_strings
    - prefer_single_quotes
    # - public_member_api_docs
    - sort_child_properties_last
    - sort_constructors_first
    # - sort_pub_dependencies
    - sort_unnamed_constructors_first
    - test_types_in_equals
    - throw_in_finally
    - tighten_type_of_initializing_formals
    - type_annotate_public_apis
    - unawaited_futures
    - unnecessary_lambdas
    - unnecessary_null_aware_assignments
    - unnecessary_null_checks
    - unnecessary_nullable_for_final_variable_declarations
    - unnecessary_parenthesis
    - unnecessary_raw_strings
    - unnecessary_statements
    - use_build_context_synchronously
    - use_late_for_private_fields_and_variables
    - use_named_constants
    - use_raw_strings
    - use_setters_to_change_properties
    - use_string_buffers
##sonar-flutter
    - close_sinks
    # - diagnostic_describe_all_properties
    - prefer_relative_imports
    - unsafe_html
    - always_put_control_body_on_new_line
    - always_put_required_named_parameters_first
    - always_specify_types
    - avoid_annotating_with_dynamic
    - avoid_catches_without_on_clauses
    # - avoid_classes_with_only_static_members
    - avoid_implementing_value_types
    - avoid_js_rounded_ints
    - avoid_positional_boolean_parameters
    - avoid_private_typedef_functions
    - flutter_style_todos
    - one_member_abstracts
    - parameter_assignments
    - prefer_asserts_with_message
    - prefer_constructors_over_static_methods
    - prefer_expression_function_bodies
    # - prefer_foreach
    - prefer_mixin
    - use_to_and_as_if_applicable
    # - abstract_super_member_reference
    # - ambiguous_extension_member_access
    # - ambiguous_import
    # - ambiguous_set_or_map_literal_both
    # - ambiguous_set_or_map_literal_either
    # - argument_type_not_assignable
    # - assignment_to_final
    # - assignment_to_final_local
    # - assignment_to_final_no_setter
    # - assignment_to_method
    # - built_in_identifier_as_extension_name
    # - built_in_identifier_as_type
    # - case_block_not_terminated
    # - cast_to_non_type
    # - concrete_class_with_abstract_member
    # - const_constructor_with_non_final_field
    # - const_initialized_with_non_constant_value
    # - const_instance_field
    # - const_not_initialized
    # - const_spread_expected_list_or_set
    # - const_spread_expected_map
    # - const_with_non_const
    # - const_with_non_constant_argument
    # - dead_code
    # - dead_code_catch_following_catch
    # - dead_code_on_catch_subtype
    # - deprecated_member_use
    # - deprecated_member_use_from_same_package
    # - duplicate_constructor
    # - duplicate_definition
    # - duplicate_import
    # - duplicate_named_argument
    # - equal_elements_in_const_set
    # - equal_keys_in_const_map
    # - expression_in_map
    # - extends_non_class
    # - extension_as_expression
    # - extension_conflicting_static_and_instance
    # - extension_declares_abstract_member
    # - extension_declares_constructor
    # - extension_declares_instance_field
    # - extension_declares_member_of_object
    # - extension_override_access_to_static_member
    # - extension_override_argument_not_assignable
    # - extension_override_without_access
    # - extension_override_with_cascade
    # - extra_positional_arguments
    # - extra_positional_arguments_could_be_named
    # - final_not_initialized
    # - final_not_initialized_constructor
    # - for_in_of_invalid_type
    # - implements_non_class
    # - implements_repeated
    # - implicit_this_reference_in_initializer
    # - initializer_for_non_existent_field
    # - initializing_formal_for_non_existent_field
    # - instance_access_to_static_member
    # - instance_member_access_from_factory
    # - instance_member_access_from_static
    # - instantiate_abstract_class
    # - invalid_assignment
    # - invalid_extension_argument_count
    # - invalid_factory_name_not_a_class
    # - invalid_literal_annotation
    # - invalid_override
    # - invalid_reference_to_this
    # - invalid_uri
    # - invalid_use_of_covariant_in_extension
    # - invalid_visibility_annotation
    # - invocation_of_extension_without_call
    # - invocation_of_non_function
    # - invocation_of_non_function_expression
    # - list_element_type_not_assignable
    # - map_entry_not_in_map
    # - map_key_type_not_assignable
    # - map_value_type_not_assignable
    # - missing_enum_constant_in_switch
    # - missing_required_param
    # - missing_return
    # - mixin_of_non_class
    # - mixin_on_sealed_class
    # - mixin_super_class_constraint_non_interface
    # - must_be_immutable
    # - must_call_super
    # - new_with_undefined_constructor_default
    # - non_abstract_class_inherits_abstract_member
    # - non_bool_condition
    # - non_bool_expression
    # - non_bool_negation_expression
    # - non_bool_operand
    # - non_constant_case_expression
    # - non_constant_default_value
    # - non_constant_list_element
    # - non_constant_map_element
    # - non_constant_map_key
    # - non_constant_map_value
    # - non_constant_set_element
    # - non_const_call_to_literal_constructor
    # - non_type_as_type_argument
    # - non_type_in_catch_clause
    # - not_a_type
    # - not_enough_positional_arguments
    # - not_iterable_spread
    # - not_map_spread
    # - no_annotation_constructor_arguments
    # - override_on_non_overriding_member
    # - part_of_non_part
    # - redirect_to_invalid_function_type
    # - redirect_to_invalid_return_type
    # - redirect_to_non_class
    # - referenced_before_declaration
    # - return_of_invalid_type
    # - return_of_invalid_type_from_closure
    # - return_without_value
    # - sdk_version_async_exported_from_core
    # - sdk_version_as_expression_in_const_context
    # - sdk_version_bool_operator_in_const_context
    # - sdk_version_eq_eq_operator_in_const_context
    # - sdk_version_extension_methods
    # - sdk_version_is_expression_in_const_context
    # - sdk_version_set_literal
    # - sdk_version_ui_as_code
    # - sdk_version_ui_as_code_in_const_context
    # - static_access_to_instance_member
    # - super_in_extension
    # - super_in_invalid_context
    # - type_argument_not_matching_bounds
    # - type_test_with_undefined_name
    # - undefined_annotation
    # - undefined_class
    # - undefined_constructor_in_initializer
    # - undefined_extension_getter
    # - undefined_extension_method
    # - undefined_extension_setter
    # - undefined_function
    # - undefined_getter
    # - undefined_hidden_name
    # - undefined_identifier
    # - undefined_method
    # - undefined_named_parameter
    # - undefined_operator
    # - undefined_prefixed_name
    # - undefined_setter
    # - undefined_shown_name
    # - undefined_super_method
    # - unnecessary_cast
    # - unqualified_reference_to_static_member_of_extended_type
    # - unused_catch_clause
    # - unused_catch_stack
    # - unused_element
    # - unused_field
    # - unused_import
    # - unused_label
    # - unused_local_variable
    # - unused_shown_name
    # - uri_does_not_exist
    # - uri_has_not_been_generated
    # - use_of_void_result
    # - variable_type_mismatch
    # - wrong_number_of_parameters_for_operator
    # - wrong_number_of_parameters_for_setter
    # - wrong_number_of_type_arguments